{"version":3,"sources":["components/habit.jsx","components/habitAddForm.jsx","components/habits.jsx","components/navbar.jsx","app.jsx","index.js"],"names":["Habit","handleIncrement","props","onIncrement","habit","handleDecrement","onDecrement","handelDelete","onDelete","this","name","count","className","onClick","PureComponent","HabitAddForm","memo","formRef","React","createRef","inputRef","ref","onSubmit","event","preventDefault","current","value","onAdd","reset","type","placeholder","Habits","handleAdd","habits","map","id","onReset","Component","Navbar","totalCount","App","state","item","setState","handleDelete","filter","Date","now","handleReset","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fdca7fc5.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\n\nclass Habit extends PureComponent {\n    handleIncrement = () => {\n        this.props.onIncrement(this.props.habit);\n    };\n    handleDecrement = () => {\n        this.props.onDecrement(this.props.habit);\n    };\n    handelDelete = () => {\n        this.props.onDelete(this.props.habit);\n    };\n    render() {\n        // 외부에서 전달받은 habit 이라는 오브젝트의 데이터를 보여주기만 하는 컴포넌트\n        const { name, count } = this.props.habit;\n        return (\n            <li className=\"habit\">\n                <span className=\"habit-name\">{name}</span> \n                <span className=\"habit-count\">{count}</span> \n                <button className=\"habit-button habit-increase\" onClick={this.handleIncrement}>\n                    <i className=\"fas fa-plus-square\"></i>  \n                </button>\n                <button className=\"habit-button habit-decrease\" onClick={this.handleDecrement}>\n                    <i className=\"fas fa-minus-square\"></i>  \n                </button>\n                <button className=\"habit-button habit-delete\" onClick={this.handelDelete}>\n                    <i className=\"fas fa-trash\"></i>  \n                </button>\n            </li>\n            \n        );\n    }\n}\n\nexport default Habit;","import React, { memo } from 'react';\n\nconst HabitAddForm = memo((props) => {\n    const formRef = React.createRef();\n    const inputRef = React.createRef();\n    const onSubmit = (event) => {\n        event.preventDefault();\n        const name = inputRef.current.value;\n        name && props.onAdd(name);\n        // this.inputRef.current.value = '';\n        formRef.current.reset();\n    };\n\n    return (\n        <form ref={formRef} className=\"add-form\" onSubmit={onSubmit}>\n            <input ref={inputRef} type=\"text\" className=\"add-input\" placeholder=\"Habit\"/>\n            <button className=\"add-button\">Add</button>\n        </form>\n    );\n});\n\nexport default HabitAddForm;","import React, { Component } from 'react';\nimport Habit from './habit';\nimport HabitAddForm from './habitAddForm';\n\nclass Habits extends Component {\n    handleIncrement = (habit) => {\n        this.props.onIncrement(habit);\n    }\n    handleDecrement = (habit) => {\n        this.props.onDecrement(habit);\n    }\n    handelDelete = (habit) => {\n        this.props.onDelete(habit);\n    }\n    handleAdd = (name) => {\n        this.props.onAdd(name);\n    }\n\n    render() {\n        return (\n            <>\n                <HabitAddForm onAdd={this.handleAdd}/>\n                <ul>\n                    {this.props.habits.map(habit => (\n                        <Habit \n                            key={habit.id} \n                            habit={habit} \n                            onIncrement={this.handleIncrement}\n                            onDecrement={this.handleDecrement}\n                            onDelete={this.handelDelete}\n                        />\n                    ))}\n                </ul>\n                <button className=\"habits-reset\" onClick={this.props.onReset}>Reset all</button>\n            </>\n            \n        );\n    }\n}\n\nexport default Habits;","import React, { Component } from 'react';\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav className=\"navbar\">\n                <i className=\"navbar-logo fas fa-leaf\"></i>\n                <span>Habit Tracker</span>\n                <span className=\"navbar-count\">{this.props.totalCount}</span>\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React, { Component } from 'react';\nimport './app.css';\nimport Habits from './components/habits';\nimport Navbar from './components/navbar';\n\nclass App extends Component {\n  state = {\n    habits: [\n        {name: \"Reading\", count: 2, id: 1},\n        {name: \"Running\", count: 1, id: 2},\n        {name: \"Coding\", count: 3, id: 3}\n    ]\n  };\n  handleIncrement = (habit) => {\n    //직접적으로 배열을 수정하면 좋지 않기 때문에 새로운 배열에 껍데기를 만들자\n    // const habits = [...this.state.habits];\n    // const index = habits.indexOf(habit);\n    // habits[index].count++;\n    const habits = this.state.habits.map(item => {\n      if (item.id === habit.id) {\n        return { ...habit, count: habit.count + 1}\n      } \n      return item;\n    })\n    this.setState({ habits: habits});\n  }\n  handleDecrement = (habit) => {\n      //직접적으로 배열을 수정하면 좋지 않기 때문에 새로운 배열에 껍데기를 만들자\n      // const habits = [...this.state.habits];\n      // const index = habits.indexOf(habit);\n      // const count = habits[index].count - 1;\n      // habits[index].count = count < 0 ? 0 : count;\n      const habits = this.state.habits.map(item => {\n        if (item.id === habit.id) {\n          const count = habit.count - 1;\n\n          return { ...habit, count: count < 0 ? 0 : count}\n        } \n        return item;\n      })\n      this.setState({ habits: habits});\n  }\n  handleDelete = (habit) => {\n      const habits = this.state.habits.filter(item => item.id != habit.id);\n      this.setState({ habits });\n  }\n  handleAdd = (name) => {\n    // 이름을 받아와서 새로운 습관을 state에 추가해주면 된다\n    // 항상 state를 직접 건드리지 말고 복사해 와서 해라\n    const habits = [...this.state.habits, {id: Date.now(), name: name, count: 0}];\n    this.setState( {habits});\n  }\n  handleReset = () => {\n    // const habits = this.state.habits.map(habit => {\n    //   habit.count = 0;\n    //   return habit;\n    // });\n    const habits = this.state.habits.map(item => {\n      if (item.count !== 0) {\n        return { ...item, count : 0};\n      }\n      return item\n    })\n    this.setState( {habits});\n  }\n  render() {\n    return (\n      <>\n        <Navbar \n          totalCount={this.state.habits.filter(habit => habit.count > 0).length} \n        />\n        <Habits\n          habits={this.state.habits} \n          onIncrement={this.handleIncrement}\n          onDecrement={this.handleDecrement}\n          onDelete={this.handleDelete}\n          onAdd={this.handleAdd}\n          onReset={this.handleReset}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport '@fortawesome/fontawesome-free/js/all.js';\nimport SimpleHabit from './components/simpleHabit';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}